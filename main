local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local toolsFolder = workspace:WaitForChild("CrimsonsMoons")

local toolKeybinds = {
    ["Clockwork Hammer"] = Enum.KeyCode.R,
    ["Scarletsteel Pickaxe"] = Enum.KeyCode.T,
    ["Steel Axe"] = Enum.KeyCode.Y,
    ["Steel Shovel"] = Enum.KeyCode.F,
    ["Pruning Shears"] = Enum.KeyCode.G,
}

local toolToggleStates = {}
for toolName in pairs(toolKeybinds) do
    toolToggleStates[toolName] = false
end

local hitboxExtenderEnabled = false
local toolAutomationEnabled = false

-- Hitbox resize function
local function resizeHitbox(tool)
    local hitbox = tool:FindFirstChild("Hitbox")
    if hitbox and hitbox:IsA("BasePart") then
        hitbox.Size = Vector3.new(50, 50, 50)
        hitbox.CFrame = tool.CFrame
        hitbox.CanCollide = false
        hitbox.Anchored = true
        hitbox.Transparency = 0.7
        print("Resized hitbox:", tool.Name)
    else
        print("No hitbox found in tool:", tool.Name)
    end
end

-- Toggle hitbox extender ON/OFF
local function toggleHitboxExtender()
    hitboxExtenderEnabled = not hitboxExtenderEnabled
    print("Hitbox extender enabled:", hitboxExtenderEnabled)
    if hitboxExtenderEnabled then
        for _, tool in pairs(toolsFolder:GetChildren()) do
            resizeHitbox(tool)
        end
        -- Listen for new tools added
        toolsFolder.ChildAdded:Connect(function(tool)
            if hitboxExtenderEnabled then
                resizeHitbox(tool)
            end
        end)
    end
end

-- Toggle tool automation ON/OFF
local function toggleToolAutomation()
    toolAutomationEnabled = not toolAutomationEnabled
    print("Tool automation enabled:", toolAutomationEnabled)

    if toolAutomationEnabled then
        task.spawn(function()
            while toolAutomationEnabled do
                local character = LocalPlayer.Character
                if character then
                    for toolName, enabled in pairs(toolToggleStates) do
                        if enabled then
                            local tool = character:FindFirstChild(toolName)
                            if tool then
                                workspace.Remotes.UseItem:FireServer(tool, false)
                                print("Used tool:", toolName)
                            end
                        end
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end

-- Listen for key presses to toggle tool use
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    local key = input.KeyCode
    for toolName, bind in pairs(toolKeybinds) do
        if key == bind then
            toolToggleStates[toolName] = not toolToggleStates[toolName]
            print(toolName, "toggled to", toolToggleStates[toolName] and "ON" or "OFF")
        end
    end

    -- Hitbox extender toggle key: H
    if key == Enum.KeyCode.H then
        toggleHitboxExtender()
    end

    -- Tool automation toggle key: J
    if key == Enum.KeyCode.J then
        toggleToolAutomation()
    end
end)

print("Script loaded. Press H to toggle hitbox extender, J to toggle tool automation.")
print("Press R, T, Y, F, G to toggle individual tools on/off.")
