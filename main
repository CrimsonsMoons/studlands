local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer

-- Tool names and their corresponding keybinds
local toolKeybinds = {
    ["Clockwork Hammer"] = Enum.KeyCode.R,
    ["Scarletsteel Pickaxe"] = Enum.KeyCode.T,
    ["Steel Axe"] = Enum.KeyCode.Y,
    ["Steel Shovel"] = Enum.KeyCode.F,
    ["Pruning Shears"] = Enum.KeyCode.G,
}

-- Toggle state for each tool
local toolToggleStates = {}

-- Initialize toggle states
for toolName in pairs(toolKeybinds) do
    toolToggleStates[toolName] = false
end

-- Handle input to toggle tools
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    for toolName, keyCode in pairs(toolKeybinds) do
        if input.KeyCode == keyCode then
            toolToggleStates[toolName] = not toolToggleStates[toolName]
            print(`[Toggle] {toolName} is now {toolToggleStates[toolName] and "ON" or "OFF"}`)
        end
    end
end)

-- Loop through all tools and use the enabled ones
while true do
    for toolName, isEnabled in pairs(toolToggleStates) do
        if isEnabled then
            local character = LocalPlayer.Character
            if character then
                local tool = character:FindFirstChild(toolName)
                if tool then
                    local args = {
                        [1] = tool,
                        [2] = false
                    }
                    workspace.Remotes.UseItem:FireServer(unpack(args))
                end
            end
        end
    end
    task.wait(0.1)
end
