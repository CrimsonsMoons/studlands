local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local toolNames = {
    ["Clockwork Hammer"] = Enum.KeyCode.R,
    ["Scarletsteel Pickaxe"] = Enum.KeyCode.T,
    ["Steel Axe"] = Enum.KeyCode.Y,
    ["Steel Shovel"] = Enum.KeyCode.F,
    ["Pruning Shears"] = Enum.KeyCode.G,
}

-- Track toggle status for each tool
local loopEnabledForTool = {}

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ToolLoopStatusGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, #toolNames * 25 + 10)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Parent = screenGui

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = frame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)

local statusLabels = {}
for toolName, _ in pairs(toolNames) do
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.SourceSans
    label.TextSize = 18
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Text = toolName .. ": OFF"
    label.Parent = frame

    statusLabels[toolName] = label
    loopEnabledForTool[toolName] = false
end

local function ToggleLoopForTool(toolName)
    loopEnabledForTool[toolName] = not loopEnabledForTool[toolName]
    statusLabels[toolName].Text = toolName .. ": " .. (loopEnabledForTool[toolName] and "ON" or "OFF")
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    for toolName, keyCode in pairs(toolNames) do
        if input.KeyCode == keyCode then
            ToggleLoopForTool(toolName)
            print("Loop for", toolName, "toggled", loopEnabledForTool[toolName] and "on" or "off")
        end
    end
end)

-- Run loop to fire remote for enabled tools
spawn(function()
    while true do
        for toolName, enabled in pairs(loopEnabledForTool) do
            if enabled then
                local char = LocalPlayer.Character
                if char then
                    local tool = char:FindFirstChild(toolName)
                    if tool then
                        if workspace:FindFirstChild("Remotes") and workspace.Remotes:FindFirstChild("UseItem") then
                            workspace.Remotes.UseItem:FireServer(tool, false)
                        end
                    end
                end
            end
        end
        wait(0.1)
    end
end)
